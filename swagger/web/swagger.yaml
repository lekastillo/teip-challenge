---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/login":
    post:
      summary: Login
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: Login successful
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                error: 
                  summary: Login error
                  value: { error: "Invalid credentials" }
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples: 
              valid_login:
                summary: Valid Login example
                value: {"email": "luis@teip.com", password: "123123123"}
  "/auth/signup":
    post:
      summary: Signup
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponseError'
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples: 
                valid_login:
                  summary: Valid Singup example
                  value: { "email": "luis@email.com", "password": "123123123", "password_confirmation": "123123123", "names": "Luis", "last_names": "Castillo", "phone": "+50379900988"}
  "/products":
    get:
      summary: List products
      tags:
      - Products
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: page
          schema:
            type: number
          required: true
      responses:
        '200':
          description: List of products
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '401':
          description: Unauthorized
  "/products/{productId}":
    get:
      summary: Show product Details
      tags:
      - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: merchantId
          schema:
            type: string
          required: true
          description: Numeric ID of the product to get
      responses:
        '200':
          description: List of products
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '401':
          description: Unauthorized
  "/product_likes":
    post:
      summary: Set a favorite product
      tags:
      - Products
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Order created successfully
        '401':
          description: Unauthorized
        '400':
          description: Bad request
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/CreateProductLikeRequest'
              examples: 
                valid_order:
                  summary: Valid order
                  value: { "product_like": { "product_id": 1 } }
  "/orders":
    post:
      summary: Create a new order
      tags:
      - Orders
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Order created successfully
        '401':
          description: Unauthorized
        '400':
          description: Bad request
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderRequest'
              examples: 
                valid_order:
                  summary: Valid order
                  value: { "order": { "cart": [ { "product_id": 1, "quantity": 1 }, { "product_id": 2, "quantity": 1 } ] } }
components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        exp:
          type: integer
        email:
          type: string
    SignupResponse:
      type: object
      properties:
        token:
          type: string
        exp:
          type: integer
        email:
          type: string
    SignupResponseError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
        names:
          type: string
        last_names:
          type: string
        phone:
          type: string
      required:
        - email
        - password
        - password_confirmation
        - phone
    Product:
      type: object
      properties:
        name:
          type: string
        sku:
          type: string
        price:
          type: number
        stock: 
          type: number
        description:
          type: string
        created_at:
          type: string
          format: date 
        updated_at:
          type: string
          format: date
      required:
        - name
        - sku
        - price
        - stock
    Order:
      type: object
      properties:
        cart:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: number
              quantity:
                type: number
    CreateOrderRequest:
      type: object
      properties:
        order:
          type: object
          properties:
            cart:
              type: array
              items:
                type: object
                properties:
                  product_id:
                    type: number
                  quantity:
                    type: number
    ProductData:
      type: object
      properties:
        id:
          type: string
        attributes:
          type: object
          $ref: '#/components/schemas/Product'
        type:
          type: string
        links:
          type: object
          properties:
            self:
              type: string
    ProductResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ProductData'
    CreateProductLikeRequest:
      type: object
      properties:
        product_like:
          type: object
          properties:
            product_id:
              type: number
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/web_api/v1
